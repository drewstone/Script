// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"zip","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[{"name":"doctor","type":"address"},{"name":"_patientID","type":"string"},{"name":"_name","type":"string"},{"name":"_dob","type":"string"},{"name":"_city","type":"string"},{"name":"_state","type":"string"},{"name":"_zip","type":"uint256"}],"name":"add_patient","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"dob","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"patient_count","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[],"name":"city","outputs":[{"name":"","type":"string"}],"type":"function"},{"inputs":[{"name":"_doctor","type":"address"},{"name":"_name","type":"string"},{"name":"_dob","type":"string"},{"name":"_city","type":"string"},{"name":"_state","type":"string"},{"name":"_zip","type":"uint256"}],"type":"constructor"}],
    binary: "6060604052604051610b77380380610b7783398101604052805160805160a05160c05160e05161010051949593840194928401939182019291019060008054600160a060020a031916871781556001805487519282905290916020601f60026000198587161561010002019094169390930483018190047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019390918a01908390106100f057805160ff19168380011785555b506101209291505b8082111561017957600081556001016100bc565b5050600581905560006006555050505050506108b8806102bf6000396000f35b828001600101855582156100b4579182015b828111156100b4578251826000505591602001919060010190610102565b50508360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017d57805160ff19168380011785555b506101ad9291506100bc565b5090565b8280016001018555821561016d579182015b8281111561016d57825182600050559160200191906001019061018f565b50508260036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020657805160ff19168380011785555b506102369291506100bc565b828001600101855582156101fa579182015b828111156101fa578251826000505591602001919060010190610218565b50508160046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061028f57805160ff19168380011785555b506100d09291506100bc565b82800160010185558215610283579182015b828111156102835782518260005055916020019190600101906102a156606060405236156100765760e060020a6000350462919055811461007857806306fdde0314610081578063081b3734146100de578063166b0053146102c857806341c0e1b5146103235780636c6063bc1461034b5780638da5cb5b14610354578063c19d93fb14610366578063fd0160fe146103c4575b005b61042460055481565b61043660018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b60408051602060248035600481810135601f81018590048502860185019096528585526104249581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760a4979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760c4979196506024919091019450909250829150840183828082843750949650509335935050505060008054600160a060020a03898116911614156104f4576006805460018101909155600780548992908110156100025790600052602060002090016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061050357805160ff19168380011785555b506105339291505b808211156105ce57600081556001016102b4565b6104366002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b61007660005433600160a060020a03908116911614156108b657600054600160a060020a0316ff5b61042460065481565b6104a4600054600160a060020a031681565b6104366004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b61043660038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b505050505081565b5060005b979650505050505050565b828001600101855582156102ac579182015b828111156102ac578251826000505591602001919060010190610515565b505085600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105d257805160ff19168380011785555b506106029291506102b4565b5090565b828001600101855582156105c2579182015b828111156105c25782518260005055916020019190600101906105e4565b505084600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061069d57805160ff19168380011785555b506106cd9291506102b4565b82800160010185558215610691579182015b828111156106915782518260005055916020019190600101906106af565b505083600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061076857805160ff19168380011785555b506107989291506102b4565b8280016001018555821561075c579182015b8281111561075c57825182600050559160200191906001019061077a565b505082600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506003016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061083357805160ff19168380011785555b506108639291506102b4565b82800160010185558215610827579182015b82811115610827578251826000505591602001919060010190610845565b505081600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f1509091019384525050604051918290036020019091206004019190915550600190506104f8565b56",
    unlinked_binary: "6060604052604051610b77380380610b7783398101604052805160805160a05160c05160e05161010051949593840194928401939182019291019060008054600160a060020a031916871781556001805487519282905290916020601f60026000198587161561010002019094169390930483018190047fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69081019390918a01908390106100f057805160ff19168380011785555b506101209291505b8082111561017957600081556001016100bc565b5050600581905560006006555050505050506108b8806102bf6000396000f35b828001600101855582156100b4579182015b828111156100b4578251826000505591602001919060010190610102565b50508360026000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017d57805160ff19168380011785555b506101ad9291506100bc565b5090565b8280016001018555821561016d579182015b8281111561016d57825182600050559160200191906001019061018f565b50508260036000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020657805160ff19168380011785555b506102369291506100bc565b828001600101855582156101fa579182015b828111156101fa578251826000505591602001919060010190610218565b50508160046000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061028f57805160ff19168380011785555b506100d09291506100bc565b82800160010185558215610283579182015b828111156102835782518260005055916020019190600101906102a156606060405236156100765760e060020a6000350462919055811461007857806306fdde0314610081578063081b3734146100de578063166b0053146102c857806341c0e1b5146103235780636c6063bc1461034b5780638da5cb5b14610354578063c19d93fb14610366578063fd0160fe146103c4575b005b61042460055481565b61043660018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b60408051602060248035600481810135601f81018590048502860185019096528585526104249581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976084979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760a4979196506024919091019450909250829150840183828082843750506040805160209735808a0135601f81018a90048a0283018a0190935282825296989760c4979196506024919091019450909250829150840183828082843750949650509335935050505060008054600160a060020a03898116911614156104f4576006805460018101909155600780548992908110156100025790600052602060002090016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061050357805160ff19168380011785555b506105339291505b808211156105ce57600081556001016102b4565b6104366002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b61007660005433600160a060020a03908116911614156108b657600054600160a060020a0316ff5b61042460065481565b6104a4600054600160a060020a031681565b6104366004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b61043660038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281529291908301828280156104ec5780601f106104c1576101008083540402835291602001916104ec565b60408051918252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156104965780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051600160a060020a03929092168252519081900360200190f35b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b505050505081565b5060005b979650505050505050565b828001600101855582156102ac579182015b828111156102ac578251826000505591602001919060010190610515565b505085600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105d257805160ff19168380011785555b506106029291506102b4565b5090565b828001600101855582156105c2579182015b828111156105c25782518260005055916020019190600101906105e4565b505084600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061069d57805160ff19168380011785555b506106cd9291506102b4565b82800160010185558215610691579182015b828111156106915782518260005055916020019190600101906106af565b505083600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061076857805160ff19168380011785555b506107989291506102b4565b8280016001018555821561075c579182015b8281111561075c57825182600050559160200191906001019061077a565b505082600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506003016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061083357805160ff19168380011785555b506108639291506102b4565b82800160010185558215610827579182015b82811115610827578251826000505591602001919060010190610845565b505081600860005088604051808280519060200190808383829060006004602084601f0104600f02600301f1509091019384525050604051918290036020019091206004019190915550600190506104f8565b56",
    address: "0x39ad5664ad4b12a901c6e57b28c3be110b98b249",
    generated_with: "2.0.6",
    contract_name: "Doctor"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Doctor error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Doctor error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Doctor error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Doctor error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Doctor = Contract;
  }

})();
